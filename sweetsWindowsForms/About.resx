<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AiIg/9k=
</value>
  </data>
</root>